import{_ as n,c as s,o as a,a as p}from"./app.811570dd.js";const g='{"title":"VueTwBlock.vue Component","description":"","frontmatter":{"head":[["link",{"rel":"icon","href":"favicon.ico"}]]},"headers":[{"level":2,"title":"Vue Component Code","slug":"vue-component-code"},{"level":2,"title":"ES Module Version","slug":"es-module-version"},{"level":2,"title":"UMD Version","slug":"umd-version"},{"level":2,"title":"CJS Version","slug":"cjs-version"},{"level":2,"title":"IIFE (Browser) Code","slug":"iife-browser-code"}],"relativePath":"component.md"}',t={},o=p(`<div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>This is an example GitHub Pages site and is NOT intended for actual use in real projects/products!</p></div><h1 id="vuetwblock-vue-component" tabindex="-1">VueTwBlock.vue Component <a class="header-anchor" href="#vuetwblock-vue-component" aria-hidden="true">#</a></h1><h2 id="vue-component-code" tabindex="-1">Vue Component Code <a class="header-anchor" href="#vue-component-code" aria-hidden="true">#</a></h2><p>Pure Vue.js version</p><div class="language-vue line-numbers-mode"><pre><code><span class="token comment">&lt;!-- ./src/VueTwBlock.vue --&gt;</span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">

	<span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> inject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
	<span class="token keyword">import</span> <span class="token punctuation">{</span> twBgPaletteConsole <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@obewds/tw-bg-palette-console&#39;</span>
	<span class="token keyword">import</span> <span class="token punctuation">{</span> twBgPaletteDefault <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@obewds/tw-bg-palette-default&#39;</span>
	<span class="token keyword">import</span> <span class="token punctuation">{</span> twBgPaletteMonochromatic <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@obewds/tw-bg-palette-monochromatic&#39;</span>
	<span class="token keyword">import</span> <span class="token punctuation">{</span> twBgPalettePastel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@obewds/tw-bg-palette-pastel&#39;</span>
	<span class="token keyword">import</span> <span class="token punctuation">{</span> twBorderPaletteDefault <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@obewds/tw-border-palette-default&#39;</span>
	<span class="token keyword">import</span> <span class="token punctuation">{</span> twTextPaletteDefault <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@obewds/tw-text-palette-default&#39;</span>

    type Blocks <span class="token operator">=</span> <span class="token string">&#39;address&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;article&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;aside&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;blockquote&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;details&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;dialog&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;dd&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;div&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;dl&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;dt&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;fieldset&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;figcaption&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;figure&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;footer&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;form&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;h1&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;h2&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;h3&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;h4&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;h5&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;h6&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;header&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;hgroup&#39;</span> <span class="token operator">|</span> <span class="token comment">/*&#39;hr&#39;,*/</span> <span class="token string">&#39;li&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;main&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;nav&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;ol&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;p&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;pre&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;section&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;table&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;ul&#39;</span><span class="token punctuation">;</span>

    type VueTwBlockProps <span class="token operator">=</span> <span class="token punctuation">{</span>
        bgPalette<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
        bgColor<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
        borderPalette<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
        borderColor<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
        <span class="token literal-property property">tag</span><span class="token operator">:</span> Blocks<span class="token punctuation">,</span>
        text<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
        textPalette<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
        textColor<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">withDefaults</span><span class="token punctuation">(</span>
        defineProps<span class="token operator">&lt;</span>VueTwBlockProps<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">bgPalette</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">bgColor</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">borderPalette</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">borderColor</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">textPalette</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">textColor</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>

    <span class="token keyword">interface</span> <span class="token class-name">TwObject</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">bg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> string
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> string
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> string
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> tw <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;tw&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> inject<span class="token operator">&lt;</span>TwObject<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&#39;tw&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">bg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>twBgPaletteConsole<span class="token punctuation">,</span>
                <span class="token operator">...</span>twBgPaletteDefault<span class="token punctuation">,</span>
                <span class="token operator">...</span>twBgPaletteMonochromatic<span class="token punctuation">,</span>
                <span class="token operator">...</span>twBgPalettePastel<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>twBorderPaletteDefault<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token operator">...</span>twTextPaletteDefault<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> compoClasses <span class="token operator">=</span> computed<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

        <span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

        output <span class="token operator">+=</span> tw <span class="token operator">&amp;&amp;</span> tw<span class="token operator">?.</span>text<span class="token operator">?.</span>palettes<span class="token operator">?.</span><span class="token punctuation">[</span>props<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token operator">?.</span>colors<span class="token operator">?.</span><span class="token punctuation">[</span>props<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span> <span class="token operator">?</span> 
                    tw<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>props<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>props<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>

        output <span class="token operator">+=</span> tw <span class="token operator">&amp;&amp;</span> tw<span class="token operator">?.</span>bg<span class="token operator">?.</span>palettes<span class="token operator">?.</span><span class="token punctuation">[</span>props<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token operator">?.</span>colors<span class="token operator">?.</span><span class="token punctuation">[</span>props<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span> <span class="token operator">?</span> 
                    tw<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>props<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>props<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>

        output <span class="token operator">+=</span> tw <span class="token operator">&amp;&amp;</span> tw<span class="token operator">?.</span>border<span class="token operator">?.</span>palettes<span class="token operator">?.</span><span class="token punctuation">[</span>props<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token operator">?.</span>colors<span class="token operator">?.</span><span class="token punctuation">[</span>props<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span> <span class="token operator">?</span> 
                    tw<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>props<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>props<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>

        <span class="token keyword">return</span> output
        
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">function</span> <span class="token function">emptyElementOrUnsupportedError</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">tag</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>

        <span class="token keyword">const</span> isEmptyElement <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;area&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;br&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;col&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;embed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hr&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;keygen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;link&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;meta&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;param&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;source&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;track&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wbr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>tag<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>isEmptyElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;The &lt;&#39;</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>tag <span class="token operator">+</span> <span class="token string">&#39;&gt; tag is an Empty Element, so when inside a Vue.js SFC &lt;template&gt; context the &lt;&#39;</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>tag <span class="token operator">+</span> <span class="token string">&#39;&gt; tag needs to be written in pure HTML to avoid the built-in &lt;component is=&quot;&quot;&gt; functionality of Vue.js which outputs an invalid closing tag for the &lt;&#39;</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>tag <span class="token operator">+</span> <span class="token string">&#39;&gt; Empty Element tag.&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">const</span> isUnsupportedElement <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;head&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;noscript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;script&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;slot&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;template&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>tag<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>isUnsupportedElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;The &lt;&#39;</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>tag <span class="token operator">+</span> <span class="token string">&#39;&gt; element tag is not supported for rendering by the VueEl.vue (&lt;vue-el/&gt;) component.&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token punctuation">(</span>isEmptyElement <span class="token operator">||</span> isUnsupportedElement<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>

    <span class="token punctuation">}</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emptyElementOrUnsupportedError(tag)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>compoClasses<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				{{ text }}
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">&gt;</span></span>VueEl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br></div></div><h2 id="es-module-version" tabindex="-1">ES Module Version <a class="header-anchor" href="#es-module-version" aria-hidden="true">#</a></h2><p>ESM version</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">var</span> __defProp <span class="token operator">=</span> Object<span class="token punctuation">.</span>defineProperty<span class="token punctuation">;</span>
<span class="token keyword">var</span> __getOwnPropSymbols <span class="token operator">=</span> Object<span class="token punctuation">.</span>getOwnPropertySymbols<span class="token punctuation">;</span>
<span class="token keyword">var</span> __hasOwnProp <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty<span class="token punctuation">;</span>
<span class="token keyword">var</span> __propIsEnum <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>propertyIsEnumerable<span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__defNormalProp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> key <span class="token keyword">in</span> obj <span class="token operator">?</span> <span class="token function">__defProp</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">__spreadValues</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a2<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> prop <span class="token keyword">in</span> b <span class="token operator">||</span> <span class="token punctuation">(</span>b <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">__hasOwnProp</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> prop<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token function">__defNormalProp</span><span class="token punctuation">(</span>a2<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> b<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>__getOwnPropSymbols<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> prop <span class="token keyword">of</span> <span class="token function">__getOwnPropSymbols</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">__propIsEnum</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> prop<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">__defNormalProp</span><span class="token punctuation">(</span>a2<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> b<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">return</span> a2<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> inject<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> openBlock<span class="token punctuation">,</span> createElementBlock<span class="token punctuation">,</span> Fragment<span class="token punctuation">,</span> createBlock<span class="token punctuation">,</span> resolveDynamicComponent<span class="token punctuation">,</span> normalizeClass<span class="token punctuation">,</span> unref<span class="token punctuation">,</span> withCtx<span class="token punctuation">,</span> createTextVNode<span class="token punctuation">,</span> toDisplayString<span class="token punctuation">,</span> renderSlot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">console</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;text-gray-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&quot;text-rose-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&quot;text-blue-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">&quot;text-violet-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token string">&quot;text-green-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token string">&quot;text-cyan-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">caution</span><span class="token operator">:</span> <span class="token string">&quot;text-amber-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> e$3 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&quot;text-white bg-rose-500 dark:bg-rose-600&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&quot;text-white bg-blue-500 dark:bg-blue-600&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">&quot;text-white bg-violet-500 dark:bg-violet-600&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token string">&quot;text-white bg-green-500 dark:bg-green-600&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> e$2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">monochromatic</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;text-gray-800 bg-gray-200 dark:bg-gray-800 dark:text-gray-200&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&quot;text-rose-800 bg-rose-200 dark:bg-rose-800 dark:text-rose-200&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&quot;text-blue-800 bg-blue-200 dark:bg-blue-800 dark:text-blue-200&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">&quot;text-violet-800 bg-violet-200 dark:bg-violet-800 dark:text-violet-200&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token string">&quot;text-green-800 bg-green-300 dark:bg-green-800 dark:text-green-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">info</span><span class="token operator">:</span> <span class="token string">&quot;text-cyan-800 bg-cyan-300 dark:bg-cyan-800 dark:text-cyan-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">caution</span><span class="token operator">:</span> <span class="token string">&quot;text-amber-800 bg-amber-300 dark:bg-amber-800 dark:text-amber-300&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> e$1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">pastel</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;text-black bg-gray-100 dark:bg-gray-200&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&quot;text-black bg-rose-200 dark:bg-rose-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&quot;text-black bg-blue-200 dark:bg-blue-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">&quot;text-black bg-violet-200 dark:bg-violet-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token string">&quot;text-black bg-green-300 dark:bg-green-400&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> r <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;border-gray-200 dark:border-gray-600&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&quot;border-rose-600 dark:border-rose-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&quot;border-blue-600 dark:border-blue-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">&quot;border-violet-600 dark:border-violet-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token string">&quot;border-green-600 dark:border-green-300&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&quot;text-rose-500 dark:text-rose-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">&quot;text-blue-500 dark:text-blue-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">&quot;text-violet-500 dark:text-violet-300&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">success</span><span class="token operator">:</span> <span class="token string">&quot;text-green-600 dark:text-green-300&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> _hoisted_1 <span class="token operator">=</span> <span class="token comment">/* @__PURE__ */</span> <span class="token function">createTextVNode</span><span class="token punctuation">(</span><span class="token string">&quot;VueEl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> _sfc_main <span class="token operator">=</span> <span class="token comment">/* @__PURE__ */</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">bgPalette</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bgColor</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">borderPalette</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">borderColor</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">textPalette</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">textColor</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">__props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> props <span class="token operator">=</span> __props<span class="token punctuation">;</span>
    <span class="token keyword">const</span> tw <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">bg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token function">__spreadValues</span><span class="token punctuation">(</span><span class="token function">__spreadValues</span><span class="token punctuation">(</span><span class="token function">__spreadValues</span><span class="token punctuation">(</span><span class="token function">__spreadValues</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span> e$3<span class="token punctuation">)</span><span class="token punctuation">,</span> e$2<span class="token punctuation">)</span><span class="token punctuation">,</span> e$1<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token function">__spreadValues</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">palettes</span><span class="token operator">:</span> <span class="token function">__spreadValues</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> compoClasses <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> _a<span class="token punctuation">,</span> _b<span class="token punctuation">,</span> _c<span class="token punctuation">,</span> _d<span class="token punctuation">,</span> _e<span class="token punctuation">,</span> _f<span class="token punctuation">,</span> _g<span class="token punctuation">,</span> _h<span class="token punctuation">,</span> _i<span class="token punctuation">,</span> _j<span class="token punctuation">,</span> _k<span class="token punctuation">,</span> _l<span class="token punctuation">;</span>
      <span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
      output <span class="token operator">+=</span> tw <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_d <span class="token operator">=</span> <span class="token punctuation">(</span>_c <span class="token operator">=</span> <span class="token punctuation">(</span>_b <span class="token operator">=</span> <span class="token punctuation">(</span>_a <span class="token operator">=</span> tw <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> tw<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _a<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _b<span class="token punctuation">[</span>props<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _c<span class="token punctuation">.</span>colors<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _d<span class="token punctuation">[</span>props<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> tw<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>props<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>props<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
      output <span class="token operator">+=</span> tw <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_h <span class="token operator">=</span> <span class="token punctuation">(</span>_g <span class="token operator">=</span> <span class="token punctuation">(</span>_f <span class="token operator">=</span> <span class="token punctuation">(</span>_e <span class="token operator">=</span> tw <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> tw<span class="token punctuation">.</span>bg<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _e<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _f<span class="token punctuation">[</span>props<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _g<span class="token punctuation">.</span>colors<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _h<span class="token punctuation">[</span>props<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> tw<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>props<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>props<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
      output <span class="token operator">+=</span> tw <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_l <span class="token operator">=</span> <span class="token punctuation">(</span>_k <span class="token operator">=</span> <span class="token punctuation">(</span>_j <span class="token operator">=</span> <span class="token punctuation">(</span>_i <span class="token operator">=</span> tw <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> tw<span class="token punctuation">.</span>border<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _i<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _j<span class="token punctuation">[</span>props<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _k<span class="token punctuation">.</span>colors<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">:</span> _l<span class="token punctuation">[</span>props<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> tw<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>props<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>props<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> output<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">emptyElementOrUnsupportedError</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> isEmptyElement <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;area&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;base&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;br&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;col&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;embed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;img&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;keygen&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;meta&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;param&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;source&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;track&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wbr&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isEmptyElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>tag <span class="token operator">+</span> <span class="token string">&quot;&gt; tag is an Empty Element, so when inside a Vue.js SFC &lt;template&gt; context the &lt;&quot;</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>tag <span class="token operator">+</span> <span class="token string">&#39;&gt; tag needs to be written in pure HTML to avoid the built-in &lt;component is=&quot;&quot;&gt; functionality of Vue.js which outputs an invalid closing tag for the &lt;&#39;</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>tag <span class="token operator">+</span> <span class="token string">&quot;&gt; Empty Element tag.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">const</span> isUnsupportedElement <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;head&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;noscript&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;script&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;slot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;template&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isUnsupportedElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>tag <span class="token operator">+</span> <span class="token string">&quot;&gt; element tag is not supported for rendering by the VueEl.vue (&lt;vue-el/&gt;) component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> isEmptyElement <span class="token operator">||</span> isUnsupportedElement <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">_ctx<span class="token punctuation">,</span> _cache</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">emptyElementOrUnsupportedError</span><span class="token punctuation">(</span>__props<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">createElementBlock</span><span class="token punctuation">(</span>Fragment<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">createBlock</span><span class="token punctuation">(</span><span class="token function">resolveDynamicComponent</span><span class="token punctuation">(</span>__props<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token keyword">class</span><span class="token operator">:</span> <span class="token function">normalizeClass</span><span class="token punctuation">(</span><span class="token function">unref</span><span class="token punctuation">(</span>compoClasses<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token function">withCtx</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
          __props<span class="token punctuation">.</span>text <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">createElementBlock</span><span class="token punctuation">(</span>Fragment<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
            <span class="token function">createTextVNode</span><span class="token punctuation">(</span><span class="token function">toDisplayString</span><span class="token punctuation">(</span>__props<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">renderSlot</span><span class="token punctuation">(</span>_ctx<span class="token punctuation">.</span>$slots<span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            _hoisted_1
          <span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">_</span><span class="token operator">:</span> <span class="token number">3</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> _sfc_main <span class="token keyword">as</span> VueTwBlock <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><h2 id="umd-version" tabindex="-1">UMD Version <a class="header-anchor" href="#umd-version" aria-hidden="true">#</a></h2><p>Version used by Node.js (Universal version for Common.js/AMD)</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">var</span> $<span class="token operator">=</span>Object<span class="token punctuation">.</span>defineProperty<span class="token punctuation">;</span><span class="token keyword">var</span> h<span class="token operator">=</span>Object<span class="token punctuation">.</span>getOwnPropertySymbols<span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token constant">F</span><span class="token operator">=</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty<span class="token punctuation">,</span><span class="token constant">M</span><span class="token operator">=</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>propertyIsEnumerable<span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">C</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span>e<span class="token punctuation">,</span>o</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>e <span class="token keyword">in</span> r<span class="token operator">?</span><span class="token function">$</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span>e<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">value</span><span class="token operator">:</span>o<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span>r<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">=</span>o<span class="token punctuation">,</span><span class="token function-variable function">b</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> o <span class="token keyword">in</span> e<span class="token operator">||</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token constant">F</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token constant">C</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span>o<span class="token punctuation">,</span>e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> o <span class="token keyword">of</span> <span class="token function">h</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token constant">C</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span>o<span class="token punctuation">,</span>e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">typeof</span> exports<span class="token operator">==</span><span class="token string">&quot;object&quot;</span><span class="token operator">&amp;&amp;</span><span class="token keyword">typeof</span> module<span class="token operator">!=</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">?</span><span class="token function">e</span><span class="token punctuation">(</span>exports<span class="token punctuation">,</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">typeof</span> define<span class="token operator">==</span><span class="token string">&quot;function&quot;</span><span class="token operator">&amp;&amp;</span>define<span class="token punctuation">.</span>amd<span class="token operator">?</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;exports&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token keyword">typeof</span> globalThis<span class="token operator">!=</span><span class="token string">&quot;undefined&quot;</span><span class="token operator">?</span>globalThis<span class="token operator">:</span>r<span class="token operator">||</span>self<span class="token punctuation">,</span><span class="token function">e</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>VueTwBlock<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span>Vue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span><span class="token keyword">var</span> o<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">console</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-gray-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">info</span><span class="token operator">:</span><span class="token string">&quot;text-cyan-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">caution</span><span class="token operator">:</span><span class="token string">&quot;text-amber-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">E</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-rose-500 dark:bg-rose-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-blue-500 dark:bg-blue-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-violet-500 dark:bg-violet-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-green-500 dark:bg-green-600&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">P</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">monochromatic</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-gray-800 bg-gray-200 dark:bg-gray-800 dark:text-gray-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-800 bg-rose-200 dark:bg-rose-800 dark:text-rose-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-800 bg-blue-200 dark:bg-blue-800 dark:text-blue-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-800 bg-violet-200 dark:bg-violet-800 dark:text-violet-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-800 bg-green-300 dark:bg-green-800 dark:text-green-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">info</span><span class="token operator">:</span><span class="token string">&quot;text-cyan-800 bg-cyan-300 dark:bg-cyan-800 dark:text-cyan-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">caution</span><span class="token operator">:</span><span class="token string">&quot;text-amber-800 bg-amber-300 dark:bg-amber-800 dark:text-amber-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">T</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">pastel</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-gray-100 dark:bg-gray-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-rose-200 dark:bg-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-blue-200 dark:bg-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-violet-200 dark:bg-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-green-300 dark:bg-green-400&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>v<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;border-gray-200 dark:border-gray-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;border-rose-600 dark:border-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;border-blue-600 dark:border-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;border-violet-600 dark:border-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;border-green-600 dark:border-green-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">V</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-500 dark:text-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-500 dark:text-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-500 dark:text-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-600 dark:text-green-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> w<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">createTextVNode</span><span class="token punctuation">(</span><span class="token string">&quot;VueEl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">B</span><span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">bgPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">bgColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">borderPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">borderColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">tag</span><span class="token operator">:</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">textPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">textColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">g</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>g<span class="token punctuation">,</span>a<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>e<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">bg</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">E</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">P</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">border</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">V</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> j<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">var</span> d<span class="token punctuation">,</span>c<span class="token punctuation">,</span>s<span class="token punctuation">,</span>n<span class="token punctuation">,</span>i<span class="token punctuation">,</span>k<span class="token punctuation">,</span>u<span class="token punctuation">,</span>y<span class="token punctuation">,</span>p<span class="token punctuation">,</span>x<span class="token punctuation">,</span>f<span class="token punctuation">,</span>m<span class="token punctuation">;</span><span class="token keyword">let</span> l<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span><span class="token keyword">return</span> l<span class="token operator">+=</span>a<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token punctuation">(</span>d<span class="token operator">=</span>a<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>a<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>d<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>c<span class="token punctuation">[</span>t<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">[</span>t<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>a<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>t<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>l<span class="token operator">+=</span>a<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">=</span>a<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>a<span class="token punctuation">.</span>bg<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>i<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>k<span class="token punctuation">[</span>t<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>y<span class="token punctuation">[</span>t<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>a<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>t<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>l<span class="token operator">+=</span>a<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">=</span><span class="token punctuation">(</span>f<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">=</span>a<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>a<span class="token punctuation">.</span>border<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>p<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>x<span class="token punctuation">[</span>t<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>f<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>m<span class="token punctuation">[</span>t<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>a<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>t<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>l<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token constant">S</span><span class="token punctuation">(</span><span class="token parameter">l</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> d<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;area&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;base&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;br&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;col&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;embed&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hr&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;keygen&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;meta&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;param&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;source&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;track&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;wbr&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>d<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>t<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; tag is an Empty Element, so when inside a Vue.js SFC &lt;template&gt; context the &lt;&quot;</span><span class="token operator">+</span>t<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&#39;&gt; tag needs to be written in pure HTML to avoid the built-in &lt;component is=&quot;&quot;&gt; functionality of Vue.js which outputs an invalid closing tag for the &lt;&#39;</span><span class="token operator">+</span>t<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; Empty Element tag.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;noscript&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;slot&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;template&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> c<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>t<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; element tag is not supported for rendering by the VueEl.vue (&lt;vue-el/&gt;) component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>d<span class="token operator">||</span>c<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">(</span><span class="token parameter">l<span class="token punctuation">,</span>d</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token constant">S</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">createElementBlock</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Fragment<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">createBlock</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">resolveDynamicComponent</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">class</span><span class="token operator">:</span>e<span class="token punctuation">.</span><span class="token function">normalizeClass</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">unref</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span>e<span class="token punctuation">.</span><span class="token function">withCtx</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>g<span class="token punctuation">.</span>text<span class="token operator">?</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">createElementBlock</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Fragment<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>e<span class="token punctuation">.</span><span class="token function">createTextVNode</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toDisplayString</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span>e<span class="token punctuation">.</span><span class="token function">renderSlot</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>$slots<span class="token punctuation">,</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">_</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>r<span class="token punctuation">.</span>VueTwBlock<span class="token operator">=</span><span class="token constant">B</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">__esModule</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&quot;Module&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="cjs-version" tabindex="-1">CJS Version <a class="header-anchor" href="#cjs-version" aria-hidden="true">#</a></h2><p>CommonJS version</p><div class="language-js line-numbers-mode"><pre><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token constant">C</span><span class="token operator">=</span>Object<span class="token punctuation">.</span>defineProperty<span class="token punctuation">;</span><span class="token keyword">var</span> m<span class="token operator">=</span>Object<span class="token punctuation">.</span>getOwnPropertySymbols<span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token constant">E</span><span class="token operator">=</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty<span class="token punctuation">,</span><span class="token constant">P</span><span class="token operator">=</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>propertyIsEnumerable<span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">f</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>e<span class="token punctuation">,</span>t</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>e <span class="token keyword">in</span> a<span class="token operator">?</span><span class="token constant">C</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>e<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">value</span><span class="token operator">:</span>t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span>a<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">=</span>t<span class="token punctuation">,</span><span class="token function-variable function">l</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token keyword">in</span> e<span class="token operator">||</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token constant">E</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>t<span class="token punctuation">,</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token keyword">of</span> <span class="token function">m</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token constant">P</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>t<span class="token punctuation">,</span>e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> a<span class="token punctuation">}</span><span class="token punctuation">;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>exports<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">__esModule</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&quot;Module&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> r<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>w<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">console</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-gray-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">info</span><span class="token operator">:</span><span class="token string">&quot;text-cyan-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">caution</span><span class="token operator">:</span><span class="token string">&quot;text-amber-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">B</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-rose-500 dark:bg-rose-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-blue-500 dark:bg-blue-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-violet-500 dark:bg-violet-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-green-500 dark:bg-green-600&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">T</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">monochromatic</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-gray-800 bg-gray-200 dark:bg-gray-800 dark:text-gray-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-800 bg-rose-200 dark:bg-rose-800 dark:text-rose-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-800 bg-blue-200 dark:bg-blue-800 dark:text-blue-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-800 bg-violet-200 dark:bg-violet-800 dark:text-violet-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-800 bg-green-300 dark:bg-green-800 dark:text-green-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">info</span><span class="token operator">:</span><span class="token string">&quot;text-cyan-800 bg-cyan-300 dark:bg-cyan-800 dark:text-cyan-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">caution</span><span class="token operator">:</span><span class="token string">&quot;text-amber-800 bg-amber-300 dark:bg-amber-800 dark:text-amber-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">V</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">pastel</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-gray-100 dark:bg-gray-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-rose-200 dark:bg-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-blue-200 dark:bg-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-violet-200 dark:bg-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-green-300 dark:bg-green-400&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;border-gray-200 dark:border-gray-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;border-rose-600 dark:border-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;border-blue-600 dark:border-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;border-violet-600 dark:border-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;border-green-600 dark:border-green-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">S</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-500 dark:text-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-500 dark:text-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-500 dark:text-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-600 dark:text-green-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> $<span class="token operator">=</span>r<span class="token punctuation">.</span><span class="token function">createTextVNode</span><span class="token punctuation">(</span><span class="token string">&quot;VueEl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">F</span><span class="token operator">=</span>r<span class="token punctuation">.</span><span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">bgPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">bgColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">borderPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">borderColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">tag</span><span class="token operator">:</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">textPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">textColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> e<span class="token operator">=</span>a<span class="token punctuation">,</span>t<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>r<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">bg</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">l</span><span class="token punctuation">(</span><span class="token function">l</span><span class="token punctuation">(</span><span class="token function">l</span><span class="token punctuation">(</span><span class="token function">l</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">B</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">V</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">border</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">l</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">l</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">S</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> v<span class="token operator">=</span>r<span class="token punctuation">.</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">var</span> b<span class="token punctuation">,</span>g<span class="token punctuation">,</span>d<span class="token punctuation">,</span>c<span class="token punctuation">,</span>s<span class="token punctuation">,</span>n<span class="token punctuation">,</span>i<span class="token punctuation">,</span>u<span class="token punctuation">,</span>k<span class="token punctuation">,</span>y<span class="token punctuation">,</span>p<span class="token punctuation">,</span>x<span class="token punctuation">;</span><span class="token keyword">let</span> o<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span><span class="token keyword">return</span> o<span class="token operator">+=</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token punctuation">(</span>d<span class="token operator">=</span><span class="token punctuation">(</span>g<span class="token operator">=</span><span class="token punctuation">(</span>b<span class="token operator">=</span>t<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>t<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>b<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>g<span class="token punctuation">[</span>e<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>d<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>c<span class="token punctuation">[</span>e<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>e<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>e<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>o<span class="token operator">+=</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span>t<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>t<span class="token punctuation">.</span>bg<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">[</span>e<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>i<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">[</span>e<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>e<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>e<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>o<span class="token operator">+=</span>t<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">=</span><span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token punctuation">(</span>k<span class="token operator">=</span>t<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>t<span class="token punctuation">.</span>border<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>k<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>y<span class="token punctuation">[</span>e<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>p<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>x<span class="token punctuation">[</span>e<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>t<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>e<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>e<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>o<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;area&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;base&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;br&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;col&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;embed&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hr&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;keygen&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;meta&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;param&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;source&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;track&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;wbr&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>e<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; tag is an Empty Element, so when inside a Vue.js SFC &lt;template&gt; context the &lt;&quot;</span><span class="token operator">+</span>e<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&#39;&gt; tag needs to be written in pure HTML to avoid the built-in &lt;component is=&quot;&quot;&gt; functionality of Vue.js which outputs an invalid closing tag for the &lt;&#39;</span><span class="token operator">+</span>e<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; Empty Element tag.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> g<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;noscript&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;slot&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;template&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> g<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>e<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; element tag is not supported for rendering by the VueEl.vue (&lt;vue-el/&gt;) component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>b<span class="token operator">||</span>g<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">h</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function">createElementBlock</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>Fragment<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function">createBlock</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">resolveDynamicComponent</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">class</span><span class="token operator">:</span>r<span class="token punctuation">.</span><span class="token function">normalizeClass</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">unref</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span>r<span class="token punctuation">.</span><span class="token function">withCtx</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>a<span class="token punctuation">.</span>text<span class="token operator">?</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span><span class="token function">createElementBlock</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>Fragment<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>r<span class="token punctuation">.</span><span class="token function">createTextVNode</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">toDisplayString</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span>r<span class="token punctuation">.</span><span class="token function">renderSlot</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$slots<span class="token punctuation">,</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>$<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">_</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>exports<span class="token punctuation">.</span>VueTwBlock<span class="token operator">=</span><span class="token constant">F</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="iife-browser-code" tabindex="-1">IIFE (Browser) Code <a class="header-anchor" href="#iife-browser-code" aria-hidden="true">#</a></h2><p>Version used for browser instances</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">var</span> $<span class="token operator">=</span>Object<span class="token punctuation">.</span>defineProperty<span class="token punctuation">;</span><span class="token keyword">var</span> h<span class="token operator">=</span>Object<span class="token punctuation">.</span>getOwnPropertySymbols<span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token constant">F</span><span class="token operator">=</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>hasOwnProperty<span class="token punctuation">,</span><span class="token constant">M</span><span class="token operator">=</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>propertyIsEnumerable<span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">C</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span>e<span class="token punctuation">,</span>a</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>e <span class="token keyword">in</span> o<span class="token operator">?</span><span class="token function">$</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>e<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">value</span><span class="token operator">:</span>a<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span>o<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">,</span><span class="token function-variable function">b</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> a <span class="token keyword">in</span> e<span class="token operator">||</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token constant">F</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token constant">C</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>a<span class="token punctuation">,</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> a <span class="token keyword">of</span> <span class="token function">h</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token constant">C</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span>a<span class="token punctuation">,</span>e<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> o<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">VueTwBlock</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span>e</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">console</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-gray-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-200 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">info</span><span class="token operator">:</span><span class="token string">&quot;text-cyan-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">caution</span><span class="token operator">:</span><span class="token string">&quot;text-amber-300 bg-gray-800 bg-opacity-100 dark:bg-black dark:bg-opacity-80&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">E</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-rose-500 dark:bg-rose-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-blue-500 dark:bg-blue-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-violet-500 dark:bg-violet-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-white bg-green-500 dark:bg-green-600&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">P</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">monochromatic</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-gray-800 bg-gray-200 dark:bg-gray-800 dark:text-gray-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-800 bg-rose-200 dark:bg-rose-800 dark:text-rose-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-800 bg-blue-200 dark:bg-blue-800 dark:text-blue-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-800 bg-violet-200 dark:bg-violet-800 dark:text-violet-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-800 bg-green-300 dark:bg-green-800 dark:text-green-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">info</span><span class="token operator">:</span><span class="token string">&quot;text-cyan-800 bg-cyan-300 dark:bg-cyan-800 dark:text-cyan-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">caution</span><span class="token operator">:</span><span class="token string">&quot;text-amber-800 bg-amber-300 dark:bg-amber-800 dark:text-amber-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token constant">V</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token literal-property property">pastel</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-gray-100 dark:bg-gray-200&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-rose-200 dark:bg-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-blue-200 dark:bg-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-violet-200 dark:bg-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-black bg-green-300 dark:bg-green-400&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>v<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;border-gray-200 dark:border-gray-600&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;border-rose-600 dark:border-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;border-blue-600 dark:border-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;border-violet-600 dark:border-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;border-green-600 dark:border-green-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>w<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;text-rose-500 dark:text-rose-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">primary</span><span class="token operator">:</span><span class="token string">&quot;text-blue-500 dark:text-blue-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">secondary</span><span class="token operator">:</span><span class="token string">&quot;text-violet-500 dark:text-violet-300&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">success</span><span class="token operator">:</span><span class="token string">&quot;text-green-600 dark:text-green-300&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token constant">B</span><span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">createTextVNode</span><span class="token punctuation">(</span><span class="token string">&quot;VueEl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">T</span><span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">bgPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">bgColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">borderPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">borderColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">tag</span><span class="token operator">:</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">textPalette</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">textColor</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> t<span class="token operator">=</span>d<span class="token punctuation">,</span>r<span class="token operator">=</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token operator">?</span>e<span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&quot;tw&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">bg</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">E</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">P</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">V</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">border</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">text</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">palettes</span><span class="token operator">:</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">let</span> j<span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token keyword">var</span> g<span class="token punctuation">,</span>c<span class="token punctuation">,</span>s<span class="token punctuation">,</span>n<span class="token punctuation">,</span>i<span class="token punctuation">,</span>k<span class="token punctuation">,</span>u<span class="token punctuation">,</span>y<span class="token punctuation">,</span>p<span class="token punctuation">,</span>x<span class="token punctuation">,</span>m<span class="token punctuation">,</span>f<span class="token punctuation">;</span><span class="token keyword">let</span> l<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span><span class="token keyword">return</span> l<span class="token operator">+=</span>r<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">=</span><span class="token punctuation">(</span>c<span class="token operator">=</span><span class="token punctuation">(</span>g<span class="token operator">=</span>r<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>g<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>c<span class="token punctuation">[</span>t<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>s<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>n<span class="token punctuation">[</span>t<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>r<span class="token punctuation">.</span>text<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">.</span>textPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>t<span class="token punctuation">.</span>textColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>l<span class="token operator">+=</span>r<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token punctuation">(</span>u<span class="token operator">=</span><span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">=</span>r<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>r<span class="token punctuation">.</span>bg<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>i<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>k<span class="token punctuation">[</span>t<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>u<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>y<span class="token punctuation">[</span>t<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>r<span class="token punctuation">.</span>bg<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">.</span>bgPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>t<span class="token punctuation">.</span>bgColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>l<span class="token operator">+=</span>r<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token operator">=</span><span class="token punctuation">(</span>m<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">=</span>r<span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>r<span class="token punctuation">.</span>border<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>p<span class="token punctuation">.</span>palettes<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>x<span class="token punctuation">[</span>t<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>m<span class="token punctuation">.</span>colors<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token operator">?</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token operator">:</span>f<span class="token punctuation">[</span>t<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span>r<span class="token punctuation">.</span>border<span class="token punctuation">.</span>palettes<span class="token punctuation">[</span>t<span class="token punctuation">.</span>borderPalette<span class="token punctuation">]</span><span class="token punctuation">.</span>colors<span class="token punctuation">[</span>t<span class="token punctuation">.</span>borderColor<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>l<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token constant">S</span><span class="token punctuation">(</span><span class="token parameter">l</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> g<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;area&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;base&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;br&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;col&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;embed&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hr&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;keygen&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;meta&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;param&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;source&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;track&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;wbr&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>g<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>t<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; tag is an Empty Element, so when inside a Vue.js SFC &lt;template&gt; context the &lt;&quot;</span><span class="token operator">+</span>t<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&#39;&gt; tag needs to be written in pure HTML to avoid the built-in &lt;component is=&quot;&quot;&gt; functionality of Vue.js which outputs an invalid closing tag for the &lt;&#39;</span><span class="token operator">+</span>t<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; Empty Element tag.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;noscript&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;slot&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;template&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> c<span class="token operator">&amp;&amp;</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;The &lt;&quot;</span><span class="token operator">+</span>t<span class="token punctuation">.</span>tag<span class="token operator">+</span><span class="token string">&quot;&gt; element tag is not supported for rendering by the VueEl.vue (&lt;vue-el/&gt;) component.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>g<span class="token operator">||</span>c<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">(</span><span class="token parameter">l<span class="token punctuation">,</span>g</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token constant">S</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">createElementBlock</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Fragment<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">createBlock</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">resolveDynamicComponent</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">class</span><span class="token operator">:</span>e<span class="token punctuation">.</span><span class="token function">normalizeClass</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">unref</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token keyword">default</span><span class="token operator">:</span>e<span class="token punctuation">.</span><span class="token function">withCtx</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span>d<span class="token punctuation">.</span>text<span class="token operator">?</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">openBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span><span class="token function">createElementBlock</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>Fragment<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>e<span class="token punctuation">.</span><span class="token function">createTextVNode</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toDisplayString</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span>e<span class="token punctuation">.</span><span class="token function">renderSlot</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>$slots<span class="token punctuation">,</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span><span class="token constant">B</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">_</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> o<span class="token punctuation">.</span>VueTwBlock<span class="token operator">=</span><span class="token constant">T</span><span class="token punctuation">,</span>Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">__esModule</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&quot;Module&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>Vue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div>`,17),e=[o];function c(l,u,r,k,i,b){return a(),s("div",null,e)}var d=n(t,[["render",c]]);export{g as __pageData,d as default};
